<rxui:ReactiveUserControl x:Class="MusicMachine.Controls.SynthesizerElements.AudioFileControl.AudioFileView"
             x:TypeArguments="vm:AudioFileViewModel"
             xmlns:rxui="http://reactiveui.net"
             xmlns:vm="clr-namespace:MusicMachine.Controls.SynthesizerElements.AudioFileControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicMachine.Controls.SynthesizerElements.AudioFileControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Border BorderBrush="CornflowerBlue" BorderThickness="1">
        <StackPanel Orientation="Horizontal">
            <local:AudioFileCanvas Background="Yellow" 
                               Width="{Binding ViewboxWidth}" Height="{Binding ViewboxHeight}"
                               LeftPositionInMilliseconds="{Binding LeftPositionInMilliseconds}"
                               RightPositionInMilliseconds="{Binding RightPositionInMilliseconds}"
                               FileLengthInMilliseconds="{Binding FileLengthInMilliseconds}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <!--<mvvm:EventToCommand Command="{Binding TheaterManageRoomClickOnCanvas}" PassEventArgsToCommand="True"/>-->
                        <i:InvokeCommandAction Command="{Binding LoadAudioFileCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!-- Viewbox sorgt dafür, dass die FontSize so angepasst wird, dass sie genau in das Control passt (Das Child-Control wird skaliert)-->
                <!-- https://stackoverflow.com/questions/3229337/wpf-label-adapt-fontsize-to-its-width-and-height -->
                <Viewbox Stretch="Fill" Width="{Binding ViewboxWidth}" Height="{Binding ViewboxHeight}">
                    <TextBlock Text="{Binding FileName}" FontSize="30" FontFamily="Calibri" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center">
                <!-- Der gepunktete Foreground-Brush sorgt für die Punkt-Schrift-->

                        <TextBlock.Foreground>
                            <!-- Ein Visual-Brush zeichnet WPF-UIElemente-->
                            <!-- https://docs.microsoft.com/en-us/dotnet/framework/wpf/graphics-multimedia/wpf-brushes-overview?redirectedfrom=MSDN#paint-with-an-image-->
                            <VisualBrush 
                    TileMode="Tile" 
                    Viewport="0,0,3,3" 
                    ViewportUnits="Absolute" 
                    Viewbox="0,0,12,12"
                    ViewboxUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Ellipse 
                            Fill="#00AA10" 
                            Width="10" Height="10" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBlock.Foreground>

                        <TextBlock.Background>
                            <ImageBrush ImageSource="{Binding SampleImage}" TileMode="None"/>
                        </TextBlock.Background>

                    </TextBlock>
                </Viewbox>
            </local:AudioFileCanvas>

            <StackPanel Orientation="Horizontal" >
                <Label Content="Pitch" />
                <Slider Width="50" Minimum="0" Maximum="2" Value="{Binding Pitch}" Margin="0 3 0 0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding MouseLeftDoubleClickCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
            </StackPanel>          
        </StackPanel>
        
    </Border>


</rxui:ReactiveUserControl>
