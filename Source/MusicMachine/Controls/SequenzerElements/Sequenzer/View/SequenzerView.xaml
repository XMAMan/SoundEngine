<rxui:ReactiveUserControl x:Class="MusicMachine.Controls.SequenzerElements.Sequenzer.SequenzerView"
             xmlns:vm="clr-namespace:MusicMachine.Controls.SequenzerElements.Sequenzer"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:TypeArguments="vm:SequenzerViewModel"             
             xmlns:rxui="http://reactiveui.net"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local1="clr-namespace:MusicMachine.Controls.SequenzerElements.Piano" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
        <DockPanel>

            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" HorizontalAlignment="Left" Height="{Binding ElementName=YZoom, Path=Value}">
                <!-- Der RadioButton sorgt heimlich im Hintergrund dafür, dass immer nur bei ein Sequenzer IsActivated==true ist -->
                <RadioButton GroupName="sex" VerticalAlignment="Center" IsChecked="{Binding IsActivated}" Visibility="Collapsed"/>
                    <StackPanel>
                    <Label Content="{Binding InstrumentName}" Width="100"/>
                        <StackPanel Orientation="Horizontal">
                            <!-- Vorgehen, um ein Button mit Icon anzulegen-->
                            <!-- Schritt 1: Den Projektordner 'Resources' anlegen (Rechtsklick auf Projekt->Add->New Folder -->
                            <!-- Schritt 2: Die Bilddateien im Dateiexplorer im Resources-Ordner speichern-->
                            <!-- Schritt 3: Unter Projekteigenschaften->Resources->Add Exisiting File die Bilddateien hinzufügen-->
                            <!-- Schritt 4: Im Projektexplorer bei Bilddatei: Build Action=Resource-->
                            <Button Width="30" Height="30" ToolTip="Save Synthesizer-Settings" Command="{Binding SaveSynthesizerCommand}">
                                <Image Source="/MusicMachine;component/Resources/SaveIcon.JPG" />
                                
                            </Button>
                            <Button Width="30" Height="30" ToolTip="Load Synthesizer-Settings" Command="{Binding LoadSynthesizerCommand}">
                                <Image Source="/MusicMachine;component/Resources/LoadIcon.JPG" />
                            </Button>
                            <Button Width="30" Height="30" ToolTip="Delete Sequenzer" Command="{Binding DeleteSequenzerCommand}">
                                <Image Source="/MusicMachine;component/Resources/DeleteIcon.JPG" />
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel VerticalAlignment="Center">
                                <Slider HorizontalAlignment="Center" Margin="3,0,0,0" Height="36" Width="26" Orientation="Vertical" Minimum="0"  Maximum="1" Value="{Binding Volume}"/>
                                <Label Content="Volume"/>
                            </StackPanel>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabled}"/>
                        </StackPanel>
                    <Button FontFamily="Marlett" FontSize="20" Content="5" Command="{Binding MoveAllNotesUpCommand}" ToolTip="move all notes one octave up"/>
                    <Button FontFamily="Marlett" FontSize="20" Content="6" Command="{Binding MoveAllNotesDownCommand}" ToolTip="move all notes one octave down"/>
                </StackPanel>



                <local1:PianoCanvas x:Name="pianoCanvas1" Width="70" DataContext="{Binding PianoViewModel}"
                                   Height = "{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequencerPixelHeight}"
                                   MinToneIndex="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequenzerSize.MinToneIndex , Mode=OneWay}" 
                                   MaxToneIndex="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequenzerSize.MaxToneIndex , Mode=OneWay}" 
                                   />
            </StackPanel>

                 <vm:SequenzerCanvas x:Name="sequenzerCanvas1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                   Notes="{Binding SequenzerKeys}" 
                                                   MouseToneIndex="{Binding MouseToneIndex, Mode=OneWay}" 
                                                   MinSampleLengthForNewNotes="{Binding ElementName=MultiSequenzerView1, Path=DataContext.MinSampleLengthForNewNotes, Mode=OneWay}"
                                                   SnapToGrid="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SnapToGrid}"
                                                   Width = "{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequencerPixelWidth}"
                                                   Height = "{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequencerPixelHeight}"
                                                   MinToneIndex="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequenzerSize.MinToneIndex , Mode=OneWay}" 
                                                   MaxToneIndex="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequenzerSize.MaxToneIndex, Mode=OneWay}" 
                                                   MaxSampleIndex="{Binding ElementName=MultiSequenzerView1, Path=DataContext.SequenzerSize.MaxSamplePosition, Mode=OneWay}" 
                                                   PlayPosition="{Binding ElementName=MultiSequenzerView1, Path=DataContext.CurrentPosition}">
                    <!-- https://stackoverflow.com/questions/1068979/wpf-rectangle-does-not-have-a-click-event-->
                    <!-- Achtung: Das Input-Binding handelt das KeyDown-Event. Deswegen kann man das dann nicht mehr nutzen -->
                    <!--<local:SequenzerCanvas.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding MouseClickCanvas}"/>
                    </local:SequenzerCanvas.InputBindings>-->
                </vm:SequenzerCanvas>
            

        </DockPanel>
        </ScrollViewer>
    
</rxui:ReactiveUserControl>
