<rxui:ReactiveUserControl x:Class="MusicMachine.Controls.SequenzerElements.MultiSequenzer.MultiSequenzerView"
             x:TypeArguments="vm:MultiSequenzerViewModel"
             xmlns:rxui="http://reactiveui.net"
             xmlns:vm="clr-namespace:MusicMachine.Controls.SequenzerElements.MultiSequenzer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicMachine.Controls.SequenzerElements.Sequenzer"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
             xmlns:synthesizer="clr-namespace:MusicMachine.Controls.SynthesizerElements.Main"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             x:Name="MultiSequenzerView1"
             d:DesignHeight="450" d:DesignWidth="1200">
    <DockPanel>
        <DockPanel.Background>
            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                <GradientStop Color="#FF8899AA" Offset="0"/>
                <GradientStop Color="White" Offset="1"/>
            </LinearGradientBrush>
        </DockPanel.Background>
        <StackPanel DockPanel.Dock="Top">
            <Menu>

                <MenuItem Header="Create new session" Command="{Binding CreateNewSessionCommand}"/>
                <MenuItem Header="Load mp3/midi/music-File" Command="{Binding LoadSessionCommand}"/>

                <MenuItem Header="Select Outputdevice" ItemsSource="{Binding OutputDeviceItemList}" >
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Name}" />
                            <Setter Property="IsCheckable" Value="True" />
                            <Setter Property="IsChecked" Value="{Binding IsSelected}" />
                            <Setter Property="Command" Value="{Binding Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>

            <!-- Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=ActualHeight}"-->
            <DockPanel Visibility="{Binding MainVisibility}">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <Border BorderBrush="Orange" BorderThickness="4" CornerRadius="8" Margin="5">
                        <synthesizer:SynthesizerView DataContext="{Binding SelectedSequenzer.SynthesizerViewModel}" Margin="2"/>
                    </Border>
                    <Border BorderBrush="Orange" BorderThickness="4" CornerRadius="8" Margin="5" VerticalAlignment="Top">
                        <StackPanel Margin="2">
                            <Button Content="Play Tone" x:Name="PlayTone" />
                            <Slider Minimum="1" Maximum="1000" Value="{Binding SelectedSequenzer.TestToneFrequence}" Width="100" Margin="0 3"/>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <Border BorderBrush="Orange" BorderThickness="4" CornerRadius="8" Margin="5" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <StackPanel Margin="2">
                        <DockPanel>
                            <Button Content="Play Midi" Command="{Binding PlayMidiCommand}" DockPanel.Dock="Left" />
                            <Button Content="Midi Stop" Command="{Binding StopMidiCommand}" HorizontalAlignment="Right"/>
                        </DockPanel>
                        <Button Content="Add Empty Sequenzer" Command="{Binding AddEmptySequenzerCommand}" />
                        <Button Content="Add Midi-File" Command="{Binding OpenMidiFileCommand}" />
                        <Button Content="Export to mp3/wav" Command="{Binding ExportAudioDataCommand}" />
                        <DockPanel>
                            <Button Content="Save" Command="{Binding SaveCommand}" DockPanel.Dock="Left" />                            
                            <Button Content="Load" Command="{Binding LoadCommand}" HorizontalAlignment="Right"/>
                        </DockPanel>
                        
                        
                    </StackPanel>
                </Border>
            </DockPanel>


            <StackPanel Orientation="Horizontal" Visibility="{Binding MainVisibility}">
                <Label Content="IsPlaying"/>
                <CheckBox IsChecked="{Binding IsPlaying}" Margin="-3 5"/>

                <Label Content="Volume:" Margin="10 0 0 0"/>
                <Slider Minimum="0" Maximum="1" Value="{Binding Volume}" Width="50" Margin="0 3"/>

                <Label Content="AutoLoop"/>
                <CheckBox IsChecked="{Binding AutoLoop}" Margin="-3 5"/>

                <Label Content="KeyStrokeSpeed:" Margin="10 0 0 0"/>
                <Slider Minimum="0.25" Maximum="5" Value="{Binding KeyStrokeSpeed}" Width="50" Margin="0 3" ToolTip="Doubleclick for reset the KeyStrokeSpeed">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding MouseDoubleClickOnKeyStrokeSpeedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>

                <Label Content="X-Zoom:" Margin="10 0 0 0"/>
                <Slider Minimum="0" Maximum="50000" Value="{Binding SequencerPixelWidth}" Width="150" Margin="0 3" />

                <Label Content="Y-Zoom:" Margin="10 0 0 0"/>
                <Slider Minimum="110" Maximum="600" Value="{Binding SequencerPixelHeight}" Width="150" Margin="0 3" x:Name="YZoom"/>

                <Label Content="SnapToGrid"/>
                <CheckBox IsChecked="{Binding SnapToGrid}" Margin="-3 5 10 0"/>

                <Label Content="GridWidth"/>
                <xctk:IntegerUpDown Minimum="1" Maximum="2000" Value="{Binding LengthInMillisecondsForNewCreatedNotes}" />

                <Label Content="Zoom"/>
                <CheckBox IsChecked="{Binding Zoom}" Margin="-3 5"/>
            </StackPanel>
            
        </StackPanel>

        <Border BorderBrush="Orange" BorderThickness="4" CornerRadius="8" Margin="5" Visibility="{Binding MainVisibility}">
            <ListView ItemsSource="{Binding Sequenzers}" SelectedItem="{Binding SelectedSequenzer}" Background="Transparent" SelectionMode="Single">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <!-- So lege ich den Container fest, welche die ListView-Items enthält-->
                <!--<ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>-->
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="ListItemBorder">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                            <Setter Property="BorderThickness" Value="5" />
                                            <Setter Property="BorderBrush" Value="Green" />
                                            <Setter Property="Margin" Value="0" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="False">
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="CornflowerBlue" />
                                            <Setter Property="Margin" Value="4" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <local:SequenzerView DataContext="{Binding .}" />
                        </Border>
                       
                            
                        
                        <!--<Border BorderBrush="CornflowerBlue" BorderThickness="1">
                        <DockPanel>

                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" HorizontalAlignment="Left" Width="200">
                                <RadioButton GroupName="sex" VerticalAlignment="Center" IsChecked="{Binding IsActivated}"/>
                                <StackPanel VerticalAlignment="Center">
                                    <Slider HorizontalAlignment="Center" Margin="3,0,0,0" Height="36" Width="26" Orientation="Vertical" Minimum="0"  Maximum="1" Value="{Binding Volume}"/>
                                    <Label Content="Volume"/>
                                </StackPanel>
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabled}"/>
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                            <local:SequenzerCanvas Height="60" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                                   Notes="{Binding SequenzerKeys}" 
                                                   MinToneIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.MinToneIndex}" 
                                                   MaxToneIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.MaxToneIndex}" 
                                                   MaxSampleIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SampleCount}" 
                                                   PlayPosition="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.CurrentPosition}" />

                        </DockPanel>
                    </Border>-->


                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Border>
    </DockPanel>
    


    
</rxui:ReactiveUserControl>
